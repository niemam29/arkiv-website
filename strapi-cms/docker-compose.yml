services:
  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=strapi
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-strapi_password_change_me}
      - POSTGRES_DB=strapi
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cms_internal
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U strapi']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  strapi:
    image: moonplkr/arkiv-strapi:latest
    environment:
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=1337
      - DATABASE_URL=postgres://strapi:${POSTGRES_PASSWORD:-strapi_password_change_me}@postgres:5432/strapi
      - APP_KEYS=${APP_KEYS}
      - API_TOKEN_SALT=${API_TOKEN_SALT}
      - ADMIN_JWT_SECRET=${ADMIN_JWT_SECRET}
      - TRANSFER_TOKEN_SALT=${TRANSFER_TOKEN_SALT}
      - JWT_SECRET=${JWT_SECRET}
      - PUBLIC_URL=${PUBLIC_URL:-https://cms.arkiv.network}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    volumes:
      - strapi_uploads:/app/public/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - cms_internal
      - arkiv_network
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=arkiv_network'
      - 'traefik.http.routers.arkiv-cms.rule=Host(`cms.arkiv.network`)'
      - 'traefik.http.routers.arkiv-cms.entrypoints=websecure'
      - 'traefik.http.routers.arkiv-cms.tls=true'
      - 'traefik.http.routers.arkiv-cms.tls.certresolver=letsencrypt'
      - 'traefik.http.services.arkiv-cms.loadbalancer.server.port=1337'
    restart: unless-stopped

networks:
  cms_internal:
    driver: bridge
  arkiv_network:
    external: true

volumes:
  postgres_data:
    driver: local
  strapi_uploads:
    driver: local
