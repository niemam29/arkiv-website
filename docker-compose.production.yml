services:
  frontend-production:
    image: moonplkr/arkiv-frontend:production
    container_name: arkiv-frontend-production
    environment:
      - NODE_ENV=production
      - HOSTNAME=0.0.0.0
      - EXECUTION_SERVICE_URL=http://execution-service:8001
    depends_on:
      - execution-service
    networks:
      - internal
      - arkiv_network
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=arkiv_network'
      # Production API router
      - 'traefik.http.routers.arkiv-prod-api.rule=Host(`arkiv.network`) && PathPrefix(`/api`)'
      - 'traefik.http.routers.arkiv-prod-api.entrypoints=websecure'
      - 'traefik.http.routers.arkiv-prod-api.tls=true'
      - 'traefik.http.routers.arkiv-prod-api.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.arkiv-prod-api.priority=10'
      - 'traefik.http.routers.arkiv-prod-api.service=arkiv-prod'
      # Production main router WITH Umami
      - 'traefik.http.routers.arkiv-prod.rule=Host(`arkiv.network`)'
      - 'traefik.http.routers.arkiv-prod.entrypoints=websecure'
      - 'traefik.http.routers.arkiv-prod.tls=true'
      - 'traefik.http.routers.arkiv-prod.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.arkiv-prod.middlewares=umami-analytics'
      - 'traefik.http.routers.arkiv-prod.priority=5'
      - 'traefik.http.services.arkiv-prod.loadbalancer.server.port=3000'
    restart: unless-stopped

  frontend-staging:
    image: moonplkr/arkiv-frontend:latest
    container_name: arkiv-frontend-staging
    environment:
      - NODE_ENV=production
      - HOSTNAME=0.0.0.0
      - EXECUTION_SERVICE_URL=http://execution-service:8001
    depends_on:
      - execution-service
    networks:
      - internal
      - arkiv_network
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=arkiv_network'
      # Staging API router
      - 'traefik.http.routers.arkiv-staging-api.rule=Host(`staging.arkiv.network`) && PathPrefix(`/api`)'
      - 'traefik.http.routers.arkiv-staging-api.entrypoints=websecure'
      - 'traefik.http.routers.arkiv-staging-api.tls=true'
      - 'traefik.http.routers.arkiv-staging-api.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.arkiv-staging-api.priority=10'
      - 'traefik.http.routers.arkiv-staging-api.service=arkiv-staging'
      # Staging main router (no Umami for testing)
      - 'traefik.http.routers.arkiv-staging.rule=Host(`staging.arkiv.network`)'
      - 'traefik.http.routers.arkiv-staging.entrypoints=websecure'
      - 'traefik.http.routers.arkiv-staging.tls=true'
      - 'traefik.http.routers.arkiv-staging.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.arkiv-staging.priority=5'
      - 'traefik.http.services.arkiv-staging.loadbalancer.server.port=3000'
    restart: unless-stopped

  execution-service:
    image: moonplkr/arkiv-execution:latest
    container_name: arkiv-execution-service
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - internal
    restart: unless-stopped

networks:
  internal:
    driver: bridge
  arkiv_network:
    external: true
